# Name of the workflow
name: Playwright Tests CI/CD

# Defines when this workflow will run
on:
  # Triggered on push to main or develop branches
  push:
    branches: [ main, develop ]
    # Skip workflow if only docs are changed
    paths-ignore:
      - '**.md'
      - 'docs/**'
  # Triggered on PRs to main branch
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  # Runs automatically every day at 2 AM UTC
  # schedule:
    # - cron: '0 2 * * *'  # Daily at 2 AM UTC


jobs:
  # Main test job - runs core functionality tests
  test:
    timeout-minutes: 60  # Maximum time allowed for this job
    runs-on: ubuntu-latest  # Use Ubuntu as the OS
    strategy:
      matrix:
        # Test across multiple browsers for compatibility: chromium, firefox, webkit
        browser: [chromium]
        # Split tests into 3 parts for parallel execution
        shardIndex: [1, 2, 3]  # Split tests into 3 shards for parallel execution
      # Don't stop other tests if one browser fails
      fail-fast: false  # Continue with other browsers if one fails
        
    steps:
      # Check out the repository code
      - uses: actions/checkout@v4
      
      # Set up Node.js environment with caching
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'  # Enable npm cache
          
      # Install project dependencies
      - name: Install dependencies
        run: npm ci  # Clean install for CI environment
        
      # Cache Playwright browsers to speed up subsequent runs
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          # Create unique cache key based on browser and dependencies
          key: playwright-${{ matrix.browser }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            playwright-${{ matrix.browser }}-
        
      # Install specific browser for this matrix combination
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}
        
      # Run the actual tests with parallel execution and retries
      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.browser }} --shard=${{ matrix.shardIndex }}/3 --workers=2 --retries=2 --update-snapshots
        env:
          CI: 'true'  # Indicate CI environment
          NODE_ENV: 'test'  # Set Node environment
        
      # Upload test results for analysis
      # - name: Upload test results
      #   uses: actions/upload-artifact@v4
      #   if: always()  # Upload even if tests fail
      #   with:
      #     name: playwright-report-${{ matrix.browser }}
      #     path: |
      #       playwright-report/
      #       test-results/
      #     retention-days: 30  # Keep reports for 30 days
          
      # # Generate detailed Allure report
      # - name: Generate Allure Report
      #   if: always()  # Generate report even if tests fail
      #   run: |
      #     npm install -g allure-commandline
      #     allure generate allure-results --clean -o allure-report
          
      # # Upload Allure report as artifact
      # - name: Upload Allure Report
      #   uses: actions/upload-artifact@v4
      #   if: always()  # Upload even if tests fail
      #   with:
      #     name: allure-report-${{ matrix.browser }}
      #     path: allure-report/
      #     retention-days: 30  # Keep reports for 30 days

  # Dedicated job for accessibility testing
  accessibility-test:
    needs: test  # Only run after main tests complete successfully
    timeout-minutes: 30  # Maximum time allowed for accessibility tests
    runs-on: ubuntu-latest
    steps:
      # Check out the repository code
      - uses: actions/checkout@v4
      
      # Set up Node.js environment
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'  # Enable npm cache
          
      # Install project dependencies
      - name: Install dependencies
        run: npm ci  # Clean install for CI environment
        
      # Cache Playwright browser for faster runs
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          # Cache key based on package-lock.json
          key: playwright-chromium-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            playwright-chromium-
        
      # Install Chromium for a11y testing
      - name: Install Playwright
        run: npx playwright install chromium
        
      # Run accessibility tests with parallel execution
      - name: Run accessibility tests
        run: |
          npx playwright test tests/accessibility/
            --project=chromium \
            --workers=3 \
            --retries=1 \
            --reporter=list,allure-playwright
        env:
          CI: 'true'
          NODE_ENV: 'test'
        
      # Upload all test artifacts and reports
      - name: Upload accessibility results
        uses: actions/upload-artifact@v4
        if: always()  # Upload even if tests fail
        with:
          name: accessibility-report
          path: |
            test-results/
            allure-results/
            playwright-report/
          retention-days: 30  # Keep reports for 30 days



        
